name: Release

on:
  create:
  push:
    # branches: [main, master, trunk]
    tags: ['v*']
    # paths: [CHANGELOG.md]

concurrency: release

jobs:
  build:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md
          if-no-files-found: error
          retention-days: 1

  container:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=match,pattern=v(.*),group=1
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .  # Required to avoid checkout
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - uses: ncipollo/release-action@v1
        with:
          artifacts: 'dist/*'
          bodyFile: changelog/CHANGELOG.md

  docs:
    if: ${{ contains('refs/heads/main refs/heads/master refs/heads/trunk refs/tags/v', github.ref) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make docs CMD='gh-deploy --force'

  WORK:
    runs-on: ubuntu-latest
    steps:
      - run: echo SUCCESS!
